import java.util.InputMismatchException;
import java.util.Scanner;

public class App {

    static Scanner lector = new Scanner(System.in);

    public static void main(String[] args) throws Exception {

        int respuesta = 0;
        int contador = 0;
        double a;
        double al, atotal, volumen, radio = 0;
        double abase = 0;
        double longlados = 0, altura = 0;
        double abaseM = 0, r = 0, rmayor = 0;
        boolean entradaValida = false;
        do {
            System.out.println("Indique con que figura geometrica desea trabajar");
            System.out.println("1. prisma");
            System.out.println("2.Cilindro");
            System.out.println("3.Piramide");
            System.out.println("4.Cono");
            System.out.println("5.Esfera");
            System.out.println("6.Zona esferica");
            System.out.println("7.Casquete esferico");
            System.out.println("8.Huso esferico y cuña esferica");
            System.out.println("9.Ortoedro");
            System.out.println("10.Tetraedro");
            System.out.println("11.Hexaedro");
            System.out.println("12.Octaedro");
            System.out.println("13.Dodecaedro");
            System.out.println("14.Icosaedro");
            System.out.println("15.Tronco de cono");
            System.out.println("16.Tronco de piramide");
            respuesta = lector.nextInt();
            contador++;
        } while (respuesta > 12 || respuesta < 0 && contador < 3);

        switch (respuesta) {

            case 1 -> {
                System.out.println("Prisma");
                int cantlados = 0;
                do {
                    try {
                        System.out.println("Ingrese la cantidad de lados: ");
                        cantlados = lector.nextInt();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError: entrada invalida \nIngrese un numero entero");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError: entrada invalida \nIngrese un numero entero");
                        lector.nextLine();
                    }
                    if (cantlados <= 0) {
                        System.out.println("La cantidad de lados debe ser mayor a 0");
                    }
                } while (!entradaValida || cantlados <= 0);

                do {
                    try {
                        System.out.println("Ingrese la longitud de los lados: ");
                        longlados = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (longlados <= 0) {
                        System.out.println("La longitud debe ser mayor a 0");
                    }
                } while (!entradaValida || longlados <= 0);

                do {
                    try {
                        System.out.println("Ingrese la altura: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                al = alPrisma(cantlados, longlados, altura);

                System.out.println("Area lateral: " + al);

                atotal = atPrisma(longlados, cantlados, altura);

                System.out.println("Area total: " + atotal);

                volumen = vPrisma(altura, cantlados, longlados);

                System.out.println("Volumen: " + volumen);

            }

            case 2 -> {
                System.out.println("Cilindro");

                double h = 0;

                do {
                    try {
                        System.out.println("\nIngrese el radio del cilindro: ");
                        r = lector.nextDouble();

                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (r <= 0) {
                        System.out.println("El radio debe ser mayor a 0");
                    }
                } while (!entradaValida || r <= 0);

                do {
                    try {
                        System.out.println("Ingrese la altura del cilindro: ");
                        altura = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                al = alCilindro(r, h);

                System.out.println("Area lateral : " + al);

                
                atotal = atCilindro(r, altura);
                System.out.println("Area total : " + atotal);

                
                volumen = vCilindro(altura, r);
                System.out.println("Volumen : " + volumen);

            }

            case 3 -> {
                System.out.println("Piramide");

                double anchl = 0;

                do {
                    try {
                        System.out.println("Ingrese la altura: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                do {
                    try {
                        System.out.println("Ingrese la longitud de los lados");
                        longlados = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (longlados <= 0) {
                        System.out.println("La longitud debe ser mayor a 0");
                    }
                } while (!entradaValida || longlados <= 0);

                do {
                    try {
                        System.out.println("Ingrese el ancho de los lados");
                        anchl = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (anchl <= 0) {
                        System.out.println("El ancho debe ser mayor a 0");
                    }
                } while (!entradaValida || anchl <= 0);

                al = alPiramide(altura, anchl, longlados);

                System.out.println("Area lateral: " + al);

                atotal = atPiramide(longlados, altura, anchl);
                System.out.println("Area total: " + atotal);

                volumen = vPiramide(longlados, altura);
                System.out.println("Volumen: " + volumen);

            }

            case 4 -> {
                System.out.println("Cono");

                double generatriz = 0, h = 0;
                do {
                    try {
                        System.out.println("Ingrese el radio del cono : ");
                        r = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (r <= 0) {
                        System.out.println("El radio debe ser mayor a 0");
                    }
                } while (!entradaValida || r <= 0);

                do {
                    try {
                        System.out.println("Ingrese la generatriz del cono: ");
                        generatriz = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\n  Error:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                do {
                    try {
                        System.out.println("Ingrese la altura del cono: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || h <= 0);

                
                al = alCono(r, generatriz);
                System.out.println("Area lateral del cono: " + al);
                
                atotal = atCono(r, generatriz);
                System.out.println("Area total del cono: " + atotal);

                volumen = vCono(altura, r);
                System.out.println("Volumen del cono: " + volumen);

            }

            case 5 -> {
                System.out.println("Esfera");

                do {
                    try {
                        System.out.println("Ingrese el radio: " );
                        radio = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (radio <= 0) {
                        System.out.println("El radio debe ser mayor a 0");
                    }
                } while (!entradaValida || radio <= 0);

                a = aEsfera(radio);
                System.out.println("Area de la esfera: " + a);
                volumen = vEsfera(radio);
                System.out.println("Volumen de la esfera: " + volumen);

            }

            case 6 -> {
                System.out.println("Zona Esferica");
                do {
                    try {
                        System.out.println("Ingrese la altura: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                do {
                    try {
                        System.out.println("Ingrese el radio");
                        r = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (r <= 0) {
                        System.out.println("El radio debe ser mayor a 0");
                    }
                } while (!entradaValida || r <= 0);

                do {
                    try {
                        System.out.println("Ingrese el radio mayor");
                        rmayor = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (rmayor <= 0) {
                        System.out.println("El radio mayor debe ser mayor a 0");
                    }
                } while (!entradaValida || rmayor <= 0);

                a = aZEsferica(rmayor, altura);

                System.out.println("Area: " + a);
                volumen = vZEsferica(r, rmayor, altura);
                System.out.println("Volumen: " + volumen);

            }

            case 7 -> {
                System.out.println("Casquete Esferico");
                do {
                    try {
                        System.out.println("Ingrese el radio mayor de la esfera: ");
                        rmayor = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (rmayor <= 0) {
                        System.out.println("El radio mayor debe ser mayor a 0");
                    }
                } while (!entradaValida || rmayor <= 0);

                do {
                    try {
                        System.out.println("Ingrese la altura de la esfera: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                
                a = aCEsferico(rmayor, altura);
                System.out.println("Area: " + a);
                
                volumen = vCEsferico(rmayor, altura);
                System.out.println("Volumen: " + volumen);

            }

            case 8 -> {
                System.out.println("Huso Esferico y Cuña Esferico");

                double nGrados = 0;
                do {
                    try {
                        System.out.println("Ingrese el radio: ");
                        r = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (r <= 0) {
                        System.out.println("El radio debe ser mayor a 0");
                    }
                } while (!entradaValida || r <= 0);

                do {
                    try {
                        System.out.println("Ingrese el numero de grados: ");
                        nGrados = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

            
                a = aHEyCE(r, nGrados);
                System.out.println("Area: " + a);

            
                volumen = vHEyCE(r);
                System.out.println("Volumen: " + volumen);

            }

            case 9 -> {
                System.out.println("Ortoedro");
                double aristas = 0, base = 0, diagonal;

                do {
                    try {
                        System.out.println("Ingrese la altura: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                do {
                    try {
                        System.out.println("Ingrese la base:");
                        base = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (base <= 0) {
                        System.out.println("La base debe ser mayor a 0");
                    }
                } while (!entradaValida || base <= 0);

                do {
                    try {
                        System.out.println("Ingrese la arista:");
                        aristas = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                a = aOrtoedro(aristas, base, altura);
                System.out.println("Area: " + a);

                diagonal = dOrtoedro(aristas, base, altura);
                System.out.println("Diagonal: " + diagonal);

                volumen = vOrtoedro(aristas, base, altura);
                System.out.println("Volumen: " + volumen);

            }

            case 10 -> {
                System.out.println("TETRAEDRO");

                double ar = 0;

                do {
                    try {
                        System.out.println("aristas: ");
                        ar = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                
                a = aTetraedro(ar);
                System.out.println("Area: " + a);
                
                volumen = vTetraedro(ar);
                System.out.println("Volumen: " + volumen);

            }

            case 11 -> {
                System.out.println("Hexaedro");

                double ar = 0;

                do {
                    try {
                        System.out.println("Ingrese las Aristas: ");
                        ar = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                
                a = aHexaedro(ar);
                System.out.println("Area: " + a);

                
                volumen = vHexaedro(ar);
                System.out.println("Volumen: " + volumen);

            }

            case 12 -> {
                System.out.println("Octaedro");
                double arista = 0;

                do {
                    try {
                        System.out.println("Aristas: ");
                        arista = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                
                a = aOctaedro(arista);
                System.out.println("Area: " + a);

            
                volumen = vOctaedro(arista);
                System.out.println("Volumen: " + volumen);

            }

            case 13 -> {
                System.out.println("Dodecaedro");

                double aristas = 0;

                do {
                    try {
                        System.out.println("Aristas: ");
                        aristas = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                
                a = aDodecaedro(aristas);
                System.out.println("Area: " + a);

                
                volumen = vDodecaedro(aristas);
                System.out.println("Volumen: " + volumen);

            }

            case 14 -> {
                System.out.println("Icosaedro");
                double aristas = 0;

                do {
                    try {
                        System.out.println("Aristas: ");
                        aristas = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                
                a = aIcosaedro(aristas);
                System.out.println("Area: " + a);

                
                    volumen = vIcosaedro(aristas);
                System.out.println("Volumen : " + volumen);

            }

            case 15 -> {
                System.out.println("Tronco de Cono");

                double generatriz = 0, h = 0;

                do {
                    try {
                        System.out.println("Ingrese la altura: ");
                        h = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (h <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || h <= 0);

                do {
                    try {
                        System.out.println("ingrese el radio mayor: ");
                        rmayor = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (rmayor <= 0) {
                        System.out.println("El radio mayor debe ser mayor a 0");
                    }
                } while (!entradaValida || rmayor <= 0);

                do {
                    try {
                        System.out.println("Ingrese el radio menor");
                        r = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (r <= 0) {
                        System.out.println("El radio menor debe ser mayor a 0");
                    }
                } while (!entradaValida || r <= 0);

                do {
                    try {
                        System.out.println("Ingrese la generatriz: ");
                        generatriz = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                do {
                    try {
                        System.out.println("Area de la base mayor: ");
                        abaseM = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                } while (!entradaValida);

                do {
                    try {
                        System.out.println("Area de la base menor");
                        abase = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (abase <= 0) {
                        System.out.println("El area de la base menor debe ser mayor a 0");
                    }
                } while (!entradaValida || abase <= 0);

                
                al = alTroncoCono(generatriz, r, rmayor);
                System.out.println("Area lateral: " + al);

                atotal = atTroncoCono(generatriz, r, rmayor, abase, abaseM);
                System.out.println("Area total : " + atotal);

                volumen = vTroncoCono(h, r, rmayor);
                System.out.println("Volumen : " + volumen);

            }

            case 16 -> {
                System.out.println("Tronco de Piramide");

                double longMayor = 0, longMenor = 0;

                do {
                    try {
                        System.out.println("Ingrese la longitud del lado mayor: ");
                        longMayor = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (longMayor <= 0) {
                        System.out.println("La longitud del lado mayor debe ser mayor a 0");
                    }
                } while (!entradaValida || longMayor <= 0);

                do {
                    try {
                        System.out.println("Ingrese la longitud del lado menor: ");
                        longMenor = lector.nextDouble();
                        entradaValida = true;
                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (longMenor <= 0) {
                        System.out.println("La longitud del lado menor debe ser mayor a 0");
                    }
                } while (!entradaValida || longMenor <= 0);

                do {
                    try {
                        System.out.println("Ingrese la altura: ");
                        altura = lector.nextDouble();
                        entradaValida = true;

                    } catch (InputMismatchException e) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    } catch (NumberFormatException ex) {
                        System.out.println("\nError:entrada inválida \nIngrese un valor decimal");
                        lector.nextLine();
                    }
                    if (altura <= 0) {
                        System.out.println("La altura debe ser mayor a 0");
                    }
                } while (!entradaValida || altura <= 0);

                al = alTroncoPiramide(longMayor, longMenor, altura);
                System.out.println("Area lateral: " + al);

                atotal = atTroncoPiramide(longMayor, longMenor, altura);
                System.out.println("Area total: " + atotal);

                volumen = vTroncoPiramie(altura, longMayor, longMenor);
                System.out.println("Volumen: " + volumen);

            }
        }
        lector.close();

    }

    public static double alPrisma(int cantlados, double longlados, double altura) {
        double pbase = cantlados * longlados;
        double al = pbase * altura;

        return al;
    }

    public static double atPrisma(double longlados, int cantlados, double al) {
        double alfa = (Math.PI / 180) * (380 / cantlados);
        double apotema = longlados / (2 * Math.tan((alfa) / 2));
        double pbase = cantlados * longlados;
        double abase = (pbase * apotema) / 2;
        double at = al + abase;
        return at;
    }

    public static double vPrisma(double altura, int cantlados, double longlados) {
        double alfa = (Math.PI / 180) * (380 / cantlados);
        double apotema = longlados / (2 * Math.tan((alfa) / 2));
        double pbase = cantlados * longlados;
        double abase = (pbase * apotema) / 2;
        double volumen = abase + altura;
        return volumen;
    }

    public static double alCilindro(double r, double altura) {
        double p = 2 * Math.PI * r;
        double al = p * altura;
        return al;
    }

    public static double atCilindro(double r, double altura) {
        double p = 2 * Math.PI * r;
        double atotal = p * (altura + r);
        return atotal;
    }

    public static double vCilindro(double altura, double r) {
        double abase = Math.PI * Math.pow(r, 2);
        double volumen = abase * altura;
        return volumen;
    }

    public static double alPiramide(double altura, double anchl, double longlados) {
        double pbase = 2 * longlados + 2 * anchl;
        double apotema = longlados / 2;
        double apiramide = Math.sqrt(Math.pow(altura, 2)) + Math.pow(apotema, 2);
        double al = (pbase * apiramide) / 2;
        return al;
    }

    public static double atPiramide(double longlados, double altura, double anchl) {
        double pbase = 2 * longlados + 2 * anchl;
        double apotema = longlados / 2;
        double apiramide = Math.sqrt(Math.pow(altura, 2)) + Math.pow(apotema, 2);
        double al = (pbase * apiramide) / 2;
        double atotal = al + pbase;
        return atotal;
    }

    public static double vPiramide(double longlados, double altura) {
        double abase = longlados / 2;
        double volumen = (abase * altura) / 3;
        return volumen;
    }

    public static double alCono(double r, double generatriz) {
        double al = Math.PI * r * generatriz;
        return al;
    }

    public static double atCono(double r, double generatriz) {
        double abase = Math.PI * Math.pow(r, 2);
        double al = Math.PI * r * generatriz;
        double atotal = al + abase;
        return atotal;
    }

    public static double vCono(double altura, double r) {
        double abase = Math.PI * Math.pow(r, 2);
        double volumen = (abase * altura) / 3;
        return volumen;
    }

    public static double aEsfera(double radio) {
        double a = 4 * Math.PI * Math.pow(radio, 2);
        return a;
    }

    public static double vEsfera(double radio) {
        double a = 4 * Math.PI * Math.pow(radio, 2);
        double volumen = (4 / 3) * Math.PI * Math.pow(a, 3);
        return volumen;
    }

    public static double aZEsferica(double rmayor, double altura) {
        double a = 2 * Math.PI * rmayor * altura;
        return a;
    }

    public static double vZEsferica(double r, double rmayor, double altura) {
        double volumen = (Math.PI * altura * (Math.pow(altura, 2) + 3 * Math.pow(r, 2) + 3 * Math.pow(rmayor, 2))) / 6;
        return volumen;
    }

    public static double aCEsferico(double rmayor, double altura) {
        double a = 2 * Math.PI * rmayor * altura;
        return a;
    }

    public static double vCEsferico(double rmayor, double altura) {
        double volumen = (Math.PI * Math.pow(altura, 2) * (3 * rmayor - altura)) / 3;
        return volumen;
    }

    public static double aHEyCE(double r, double nGrados) {
        double a = (4 * Math.PI * Math.pow(r, 2) * nGrados) / 360;
        return a;
    }

    public static double vHEyCE(double r) {
        double volumen = (4 / 3) * ((Math.PI * Math.pow(r, 3)) / 360);
        return volumen;
    }

    public static double aOrtoedro(double aristas, double base, double altura) {
        double a = 2 * (aristas * base + aristas * altura + base * altura);
        return a;
    }

    public static double dOrtoedro(double aristas, double base, double altura) {
        double diagonal = Math.sqrt(Math.pow(aristas, 2) + Math.pow(base, 2) + Math.pow(altura, 2));
        return diagonal;
    }

    public static double vOrtoedro(double aristas, double base, double altura) {
        double v = aristas * base * altura;
        return v;
    }

    public static double aTetraedro(double aristas) {
        double a = aristas * Math.sqrt(3);
        return a;
    }

    public static double vTetraedro(double aristas) {
        double volumen = (Math.sqrt(2 / 12)) * Math.pow(aristas, 3);
        return volumen;
    }

    public static double aHexaedro(double aristas) {
        double a = 6 * Math.pow(aristas, 2);
        return a;
    }

    public static double vHexaedro(double aristas) {
        double volumen = Math.pow(aristas, 3);
        return volumen;
    }

    public static double aOctaedro(double aristas) {
        double a = 2 * Math.pow(aristas, 2) * (Math.sqrt(3));
        return a;
    }

    public static double vOctaedro(double aristas) {
        double v = Math.pow(aristas, 3) * (Math.sqrt(2 / 3));
        return v;
    }

    public static double aDodecaedro(double aristas) {
        double a = 3 * Math.pow(aristas, 3) * (Math.sqrt(25 + 10) * Math.sqrt(5));
        return a;
    }

    public static double vDodecaedro(double aristas) {
        double volumen = (1 / 4) * (15 + 7 * Math.sqrt(5)) * Math.pow(aristas, 3);
        return volumen;
    }

    public static double aIcosaedro(double aristas) {
        double a = 5 * Math.pow(aristas, 2) * Math.sqrt(3);
        return a;
    }

    public static double vIcosaedro(double aristas) {
        double volumen = (5 / 12) * (3 + Math.sqrt(5)) * Math.pow(aristas, 3);
        return volumen;
    }

    public static double alTroncoCono(double generatriz, double r, double rmayor) {
        double al = Math.PI * generatriz * (rmayor + r);
        return al;
    }

    public static double atTroncoCono(double generatriz, double r, double rmayor, double abase, double abaseM) {
        double al = Math.PI * generatriz * (rmayor + r);
        double atotal = al + abase + abaseM;
        return atotal;
    }

    public static double vTroncoCono(double altura, double r, double rmayor) {
        double volumen = (1 / 3) * Math.PI * altura * (Math.pow(rmayor, 2) + Math.pow(r, 2) + rmayor * r);
        return volumen;
    }

    public static double alTroncoPiramide(double longMayor, double longMenor, double altura) {
        double longMayorMitad = longMayor / 2;
        double apiramide = Math.sqrt(Math.pow(altura, 2) + Math.pow(longMayorMitad, 2));
        double pbaseM = longMayor * 4;
        double pbase = longMenor * 4;
        double al = ((pbaseM + pbase) / 2) * apiramide;
        return al;
    }

    public static double atTroncoPiramide(double longMayor, double longMenor, double altura) {
        double abaseM = Math.pow(longMayor, 2);
        double abase = Math.pow(longMenor, 2);
        double longMayorMitad = longMayor / 2;
        double apiramide = Math.sqrt(Math.pow(altura, 2) + Math.pow(longMayorMitad, 2));
        double pbaseM = longMayor * 4;
        double pbase = longMenor * 4;
        double al = ((pbaseM + pbase) / 2) * apiramide;
        double atotal = al + abase + abaseM;
        return atotal;
    }

    public static double vTroncoPiramie(double altura, double longMayor, double longMenor) {
        double abaseM = Math.pow(longMayor, 2);
        double abase = Math.pow(longMenor, 2);
        double volumen = ((1 / 3) * altura * (abaseM + abase + Math.sqrt(abase * abaseM)));
        return volumen;    }

}
